service: wildrydes-serverlessfw
plugins:
  - serverless-s3-sync

custom:
  siteName: wildrydes-serverlessfw
  userPoolName: wildrydes-serverlessfw
  userPoolClientName: wildrydes-serverlessfw
  dynamoTableName: wildrydes-serverlessfw
  s3Sync:
    - bucketName: ${self:custom.siteName}
      localDir: website

provider:
  name: aws
  runtime: nodejs6.10

  stage: prod
  region: us-east-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
      Resource: { "Fn::GetAtt" : [ "DataTable", "Arn" ] }

package:
 include:
   - lambda/**

functions:
  hello:
    handler: requestUnicorn.handler
    events:
      # API Gateway の設定
      - http:
          path: ride
          method: post
          integration: lambda
          authorizer:
            name:
              arn: { "Fn::GetAtt" : [ "UserPool", "Arn" ] }
              identitySource: method.request.header.Authorization
              type: token

resources:
 Resources:
    # S3 Bucket の作成
    WebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.siteName}
        WebsiteConfiguration:
          IndexDocument: index.html
    # S3 の Static Web Hosting のセキュリティ設定
    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: WebsiteBucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource:
                Fn::Join: ["", [
                    "arn:aws:s3:::",
                    {
                      "Ref": "WebsiteBucket"
                    },
                    "/*"
                  ]
                ]
    # DynamoDB テーブルの作成
    DataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamoTableName}
        KeySchema:
          - AttributeName: "RideId"
            KeyType: "HASH"
    # Cognito ユーザープールの作成
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:custom.userPoolName}
    # Cognito ユーザープールアプリクライアントの作成
    UserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:custom.userPoolClientName}
        GenerateSecret: false
        UserPoolId: Fn::Ref UserPool
 Outputs:
    Website URL:
      Description: "S3 Website URL"
      Value: Fn::GetAtt WebsiteBucket.DomainName
    UserPoolId:
      Description: "Cognito User Pool Name"
      Value: Fn::Ref UserPool
    UserPoolClientId:
      Description: "Cognito User Pool Client ID"
      Value: Fn::Ref UserPoolClient
